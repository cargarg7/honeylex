{
    "name": "honeylex/honeylex",
    "description": "Honeybee CQRS & ES integration with the Silex framework.",
    "license": "MIT",
    "type": "library",
    "require": {
        "php": ">=5.6.1",
        "rdlowrey/auryn": "~1.1",
        "silex/silex": "~2.0",
        "symfony/asset": "~2.8|~3.1",
        "symfony/browser-kit": "~2.8|~3.1",
        "symfony/class-loader": "~2.8|~3.1",
        "symfony/config": "~2.8|~3.1",
        "symfony/console": "~2.8|~3.1",
        "symfony/css-selector": "~2.8|~3.1",
        "symfony/finder": "~2.8|~3.1",
        "symfony/form": "~2.8|~3.1",
        "symfony/monolog-bridge": "~2.8|~3.1",
        "symfony/process": "~2.8|~3.1",
        "symfony/translation": "~2.8|~3.1",
        "symfony/twig-bridge": "~2.8|~3.1",
        "symfony/validator": "~2.8|~3.1",
        "guzzlehttp/guzzle": "^6.2.1",
        "beberlei/assert": "~2.5",
        "nesbot/carbon": "~1.21",
        "honeybee/honeybee": "master@dev",
        "roave/security-advisories": "master@dev"
    },
    "require-dev": {
        "phpunit/phpunit": "~5.3",
        "squizlabs/php_codesniffer": "~2.3",
        "silex/web-profiler": "~2.0"
    },
    "prefer-stable": true,
    "minimum-stability": "dev",
    "autoload": {
        "psr-4": {
            "Honeybee\\FrameworkBinding\\Silex\\": "app/lib/"
        }
    },
    "scripts": {
        "run": [
            "echo 'Started web server on http://localhost:8888'",
            "php -S localhost:8888 -t web web/index_dev.php"
        ],
        "code-sniffer": "vendor/bin/phpcs --extensions=php --standard=psr2 app tests/",
        "docker:up": "docker-compose -f ./var/docker/docker-compose.yml -p ${PWD##*/} up -d",
        "docker:down": "docker-compose -f ./var/docker/docker-compose.yml -p ${PWD##*/} down",
        "docker:stop": "docker-compose -f ./var/docker/docker-compose.yml -p ${PWD##*/} stop",
        "docker:start": "docker-compose -f ./var/docker/docker-compose.yml -p ${PWD##*/} start",
        "docker:build": [
            "docker-compose -f ./var/docker/docker-compose.yml -p ${PWD##*/} up --build -d",
            "docker exec -i ${PWD##*/}_elasticsearch_1 bin/plugin install analysis-icu",
            "docker exec -i ${PWD##*/}_elasticsearch_1 bin/plugin install mobz/elasticsearch-head",
            "docker-compose -f ./var/docker/docker-compose.yml -p ${PWD##*/} restart"
        ]
    }
}